name: pipeline
on:
  push:
    branches:
      - main

jobs:
  #SONARCLOUD SCAN
  sonarscan: 
    name: Static Code Analysis (SAST)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean compile
          mvn clean package
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=miketetegan_ci_project_actions -D sonar.java.binaries=target/classes -D sonar.java.libraries=target/dependency 
        #-D sonar.projectName=-Dsonar.projectKey=project_ci_jenkins -D sonar.projectBaseDir=./app
        working-directory: ./app

      - name: SonarQube Quality Gate check
        continue-on-error: true
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: $GITHUB_WORKSPACE/app/target/sonar/report-task.txt
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          #SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
              
      - name: "SonarQube Quality Gate Status"
        #if: always()
        run: |
          echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}" 

  DependenciesScan:
    name: Snyk Dependencies Scan (SCA)
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: App packaging
        run: |
          mvn clean compile
          mvn clean package
        working-directory: ./app
      #SCAN
      - name: Snyk Scan
        uses: snyk/actions/maven@master
        with:
          args: --all-projects --path=$GITHUB_WORKSPACE/app --severity-threshold=low
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
  DockerBuildandScan:
    name: Docker Image Build and Scan
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        uses: sonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
          args: >
            -D sonar.organization=miketech
            -D sonar.projectName=dockerfile
            -D sonar.projectKey=miketech_dockerfile
            -D sonar.sources=.
            -D sonar.inclusions=Dockerfile
            
      - name: SonarQube Quality Gate check
        continue-on-error: true
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        #with: CAN IGNORE IT NOW . SCAN 2 TIMES TO ACTIVAT THE GATE
        #  scanMetadataReportFile: $GITHUB_WORKSPACE/.scannerwork/report-task.txt
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          #SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
              
      - name: "SonarQube Quality Gate Status"
        if: always()
        run: |
          echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}" 

      - name: Package project
        run: mvn clean package
        working-directory: ./app
      
      - name: Build Docker image
        run: docker build -t mike004/java:latest .
        
      - name: Scan Docker image
        uses: snyk/actions/docker@master
        with:
          image: mike004/java:latest
          args: --severity-threshold=low
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Test integration
        run: docker compose up -d
        
      - name: Dynamic App Security Testing
        uses: docker://zaproxy/zap-stable
        env:
          target: http://localhost:8888/simple-web-app/users
        with:
          entrypoint: 'zap-baseline.py \'
          args: '-t $target -r report.html -I'
         
    
        
